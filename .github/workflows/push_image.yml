# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    env:
      VERSION_PREFIX: '1.1.'
      AGI_COMPONENT_VERSION: '${{ env.VERSION_PREFIX }}${{ env.GITHUB_BUILD_NUMBER }}'
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: docker login
      env:
        CCC_DOCKER_USER: ${{ secrets.CCC_DOCKER_USER }}
        CCC_DOCKER_PASS: ${{ secrets.CCC_DOCKER_PASS }}
      run: echo "$CCC_DOCKER_PASS" | docker login -u "$CCC_DOCKER_USER" --password-stdin

    - name: Print version
      run: echo "************* Building Version "$AGI_COMPONENT_VERSION" *************"
    - name: Build ccc-service.jar
      run: ./gradlew :ccc-service:build
    - name: Build image
      run: ./gradlew -PAgiComponentVersion=$AGI_COMPONENT_VERSION :serviceImage:build
    - name: Run image
      run: docker run -d -p 8080:8080 -e CCC_DEBUG=1 --name ccctest sogis/ccc-service
    - name: Verify image
      run: ./gradlew :ccc-service:execProbeFromClasses

    - name: docker push latest
      run: docker push sogis/ccc-service:latest
    - name: docker push version
      run: docker push sogis/ccc-service:$AGI_COMPONENT_VERSION
