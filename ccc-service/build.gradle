/*
buildscript {
	repositories {
		jcenter()
		maven { url 'https://repo.spring.io/snapshot' }
		maven { url 'https://repo.spring.io/milestone' }
	}

	dependencies {
		classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.4.2.RELEASE'
	}
}*/

plugins {
	id 'org.springframework.boot' version '2.2.13.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
}

/*
apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

 */

jar {
	baseName = 'ccc-service'
	version =  '0.0.1-SNAPSHOT'
}

repositories {
	mavenCentral()
	/*
	jcenter()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }

	 */
}

dependencies {
	compile("org.springframework.boot:spring-boot-starter-web:2.2.13.RELEASE")
	compile("org.springframework.boot:spring-boot-starter-websocket:2.2.13.RELEASE")
	compile("org.springframework.boot:spring-boot-starter-actuator:2.2.13.RELEASE")
	//compile("org.springframework.boot:spring-boot-messaging:2.0.0.RELEASE")
	testCompile("org.springframework.boot:spring-boot-starter-test:2.2.13.RELEASE")
}
/*
sourceSets {
	main {
		java {
			srcDir 'src/java'
		}
		resources {
			srcDir 'src/resources'
		}
	}
	test {
		java {
			srcDir 'test/java'
		}
		resources {
			srcDir 'test/resources'
		}
	}
	probe {
		java {
			srcDir 'probe/java'
		}
		resources {
			srcDir 'probe/resources'
		}
	}
}*/

task jardist(type: Copy,dependsOn:bootJar){
	delete fileTree('jardist')
	destinationDir = file('jardist')
	from bootJar
	from configurations.runtimeClasspath
}

task execProbeFromClasses(type: JavaExec, dependsOn:classes){
  classpath = sourceSets.main.runtimeClasspath
  main = 'ch.so.agi.cccprobe.ProbeTool'
}