task jardist(type: Copy, dependsOn: ':ccc-service:build'){
	from file('../ccc-service/build/libs/ccc-sercice.jar')
	into file('ccc')
}

task build(type:Exec, dependsOn: jardist) {
	def githash = getCheckedOutGitCommitHash()
	def buildident = buildIdent()
	def build_timestamp = getTimestamp()

	commandLine 'docker', 'build',
			'--no-cache', '--force-rm',
			'-t', "sogis/ccc-service:latest",
			'-t', "sogis/ccc-service:$buildident",
			'--label', "ccc-service.created=$build_timestamp",
			'--label', "ccc-service.git_commit=$githash",
			'--label', "ccc-service.build_nr=$buildident",
			'-f', 'Dockerfile',  '.'
}

task pushLatest(type:Exec, dependsOn: build) {
	commandLine 'docker', 'push', 'sogis/ccc-service:latest'
}

task push(type:Exec, dependsOn: pushLatest) {
	def buildident = buildIdent()

	commandLine 'docker', 'push', "sogis/ccc-service:$buildident"
}

/*
task build(dependsOn: jardist){
	doLast { task ->
            def buildident = findProperty("AgiComponentVersion")
            def githash = getCheckedOutGitCommitHash()
            def build_timestamp = getTimestamp()
			exec {
				commandLine 'docker', 'build',
				'--no-cache', '--force-rm',
				'-t', "sogis/ccc-service:$buildident",
				'--label', "ccc-service.created=$build_timestamp", 
				'--label', "ccc-service.git_commit=$githash",
				'--label', "ccc-service.travis_build=$buildident",
				'-f', 'Dockerfile',  '.'
			}
			exec {
				commandLine 'docker', 'tag', 
				"sogis/ccc-service:$buildident",
				"sogis/ccc-service:latest"
			}
			// docker run -p 8080:8080 -d sogis/ccc-service
			// docker run -p 8080:8080 -e CCC_DEBUG=1 -d sogis/ccc-service
			// docker run -it --rm alpine ping 172.17.0.2
        }
    }

 */

def String buildIdent() {
	String prefix = '1.1.'
	String suffix = System.getenv('GITHUB_RUN_NUMBER')

	if(suffix == null)
		suffix = 'localbuild'

	return prefix + suffix
}

def getCheckedOutGitCommitHash() {
	String val = 'git log -1 --pretty=%H'.execute().text.trim()
	return val
}

def getTimestamp() {
	def date = new Date()
	return date.format('yyyy-MM-dd HH:mm:ss')
}

